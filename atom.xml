<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mcola 博客</title>
  
  
  <link href="https://machenye.github.io/atom.xml" rel="self"/>
  
  <link href="https://machenye.github.io/"/>
  <updated>2024-08-23T02:48:35.427Z</updated>
  <id>https://machenye.github.io/</id>
  
  <author>
    <name>Mcola</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ML and Data Analyze</title>
    <link href="https://machenye.github.io/2024/08/20/ML%20and%20Data%20Analyze/"/>
    <id>https://machenye.github.io/2024/08/20/ML%20and%20Data%20Analyze/</id>
    <published>2024-08-20T08:58:46.000Z</published>
    <updated>2024-08-23T02:48:35.427Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/MACHENYE/ZJUT-Study/tree/main/ZJUT%202024%20%E6%9A%91%E6%9C%9F%E5%9B%BD%E9%99%85%E5%8C%96%E8%AF%BE%E7%A8%8B%20ML%20and%20Data%20Analyze">内容在github上，可以点击查看</a></p><h1 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h1><ul><li>进行数据清理</li><li>数据统计与分析</li><li>使用ML的函数如KNN,线性回归，逻辑回归等方法来预测表格中的数据，如在BikeBuyers表中为根据购买者的年收入，家庭地址，家中有几个小孩等等因素来预测该购买者的类型（高消费，低消费等等，用数字表示），在Zombie Enterpri中则根据企业的一些因素来预测该企业是否为僵尸企业（flag为1则表示是）</li><li>可以使用一些函数来分析哪些因素与要预测的东西最相关，使用这些因素作为ML函数中的形参，这样可以训练出更好，更精准的模型</li></ul><hr><p>参加这个暑期的课程也属实是超出了我的预料，一开始报名了之后就忘记了这件事了，后面去社会实践的时候这边已经开始上课了，虽然上课非常无聊，上午就放ML的视频，下午就用chatgpt或者copilot生成一下代码，然后不断地调试，最后做个汇报写个文档就结束了，学校的这些活动大部分都十分无聊且没用，以后不要再被老师忽悠过来了，非常劝退！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/MACHENYE/ZJUT-Study/tree/main/ZJUT%202024%20%E6%9A%91%E6%9C%9F%E5%9B%BD%E9%99%85%E5%8C%96%E8%AF%BE%E7%A8%8B%2</summary>
      
    
    
    
    <category term="学校学习" scheme="https://machenye.github.io/categories/%E5%AD%A6%E6%A0%A1%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>JS 学习笔记</title>
    <link href="https://machenye.github.io/2024/08/20/JS-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://machenye.github.io/2024/08/20/JS-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-08-20T08:53:46.000Z</published>
    <updated>2024-08-23T02:48:29.531Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本篇文章为作者在网上自学JS时的笔记，看的狂神的b站视频<br><a href="https://www.bilibili.com/video/BV1JJ41177di?vd_source=60d132d325064c67a7980dc5ab2ba430">视频链接</a></p></blockquote><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>本人认为JS的语法和Java，python及其相似，像是融合了这两种语言的语法</p><h1 id="快速引入"><a href="#快速引入" class="headerlink" title="快速引入"></a>快速引入</h1><h2 id="引入JavaScript"><a href="#引入JavaScript" class="headerlink" title="引入JavaScript"></a>引入JavaScript</h2><h3 id="内部标签"><a href="#内部标签" class="headerlink" title="内部标签"></a>内部标签</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; </span><br><span class="line">\\\ js代码 </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="外部标签"><a href="#外部标签" class="headerlink" title="外部标签"></a>外部标签</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src = <span class="string">&quot;xxx.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 变量的类型可以任意</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> name = <span class="string">&quot;mcola&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> float = <span class="number">1.1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意变量名不能以数字开头，但是可以用中文命名</span></span><br></pre></td></tr></table></figure><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(xxx); <span class="comment">// 在页面弹窗输出内容</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(xxx); <span class="comment">// 在页面的控制台（F12）输出内容</span></span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">= </span><br><span class="line">== <span class="comment">//等于（类型不一样，值相同也为true）</span></span><br><span class="line">=== <span class="comment">// 绝对等于（要求类型和值均相同才为true）</span></span><br><span class="line"></span><br><span class="line">------------------------</span><br><span class="line"><span class="title class_">NaN</span> === <span class="title class_">NaN</span> <span class="comment">// 为false，NaN与任何值都不相同包括它自己</span></span><br><span class="line"><span class="comment">// 只能通过isNaN(NaN)来判断</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1.1</span>,<span class="string">&quot;mcola&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变数组长度则数组的空间也会变化</span></span><br><span class="line">array.<span class="property">length</span> = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 则array就会变为有10个元素的数组，后面的元素为空</span></span><br><span class="line">array.<span class="property">length</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">// 则只有索引为0和1的元素，其他元素丢失</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据元素获取下标</span></span><br><span class="line">array.<span class="title function_">indexOf</span>(<span class="number">1.1</span>) <span class="comment">// 则会输出3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// slice()</span></span><br><span class="line">arr.<span class="title function_">slice</span>(<span class="number">3</span>); <span class="comment">// 从下标3开始往后截，生成一个新的数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// push()</span></span><br><span class="line">arr.<span class="title function_">push</span>(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// 在数组最后添加</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// pop()</span></span><br><span class="line">arr.<span class="title function_">pop</span>(); <span class="comment">// 输出数组最后一个元素，并删除这个元素  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// unshift();</span></span><br><span class="line">arr.<span class="title function_">unshift</span>(<span class="string">&#x27;a&#x27;</span>); <span class="comment">// 在头部插入一个元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// shift();</span></span><br><span class="line">arr.<span class="title function_">shift</span>(); <span class="comment">// 弹出头部的元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// sort();</span></span><br><span class="line">arr.<span class="title function_">sort</span>(); <span class="comment">// 排序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// reverse();</span></span><br><span class="line">arr.<span class="title function_">reverse</span>(); <span class="comment">// 数组反转</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// concat();</span></span><br><span class="line">arr.<span class="title function_">concat</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]); <span class="comment">// 添加一个新的数组在尾部，但是不改变原来的数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// join();</span></span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&#x27;-&#x27;</span>); <span class="comment">// 打印数组，使用特定的拼接符链接</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 多维数组</span></span><br><span class="line">arr = [[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]] <span class="comment">// 与c++一样</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>取数组下标，如果越界了就会显示undefined（未定义），而不是null（空）</p><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个对象</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line"><span class="attr">name</span>:<span class="string">&quot;mcola&quot;</span>,  <span class="comment">// 使用逗号分隔不同属性</span></span><br><span class="line"><span class="attr">age</span>:<span class="number">20</span>,</span><br><span class="line"><span class="attr">school</span>:<span class="variable constant_">ZJUT</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取对象的值,直接在控制台输入即可输出</span></span><br><span class="line">person.<span class="property">name</span></span><br><span class="line">person.<span class="property">age</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态删除属性</span></span><br><span class="line"><span class="keyword">delete</span> person.<span class="property">age</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态添加属性</span></span><br><span class="line">person.<span class="property">hobby</span> = <span class="string">&quot;playing&quot;</span>; <span class="comment">// 只要对一个没定义的属性赋值就会添加这个属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断属性值是否在对象中</span></span><br><span class="line"><span class="string">&#x27;age&#x27;</span> <span class="keyword">in</span> person <span class="comment">// 输出为true则在</span></span><br><span class="line"><span class="comment">// 但是这包括了继承的属性</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断属性值是否是这个对象自身拥有的</span></span><br><span class="line">person.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;age&#x27;</span>); </span><br></pre></td></tr></table></figure><h3 id="严格检查机制"><a href="#严格检查机制" class="headerlink" title="严格检查机制"></a>严格检查机制</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span> <span class="comment">// 在script代码最开始写上这个</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>; <span class="comment">// 后面都这样定义变量 </span></span><br></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 转义字符</span></span><br><span class="line">/<span class="string">&#x27;</span></span><br><span class="line"><span class="string">/t</span></span><br><span class="line"><span class="string">/n</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 输入多行字符串</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var msg = `</span></span><br><span class="line"><span class="string">hello </span></span><br><span class="line"><span class="string">world</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 模板字符串</span></span><br><span class="line"><span class="string">let name = &quot;mcola&quot;;</span></span><br><span class="line"><span class="string">let msg = `hello , $&#123;name&#125;` // 输出hello , mcola</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 字符串长度</span></span><br><span class="line"><span class="string">string.length</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 字符串的不可变性</span></span><br><span class="line"><span class="string">var str = &quot;hello&quot;; // 不能通过str[0]=&#x27;</span>a<span class="string">&#x27;来修改字符串</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 字符串的一些方法</span></span><br><span class="line"><span class="string">// 大小写转换</span></span><br><span class="line"><span class="string">student.toUpperCase()</span></span><br><span class="line"><span class="string">student.toLowerCase()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// 获取某个元素的下标</span></span><br><span class="line"><span class="string">student.indexOf(&#x27;</span>t<span class="string">&#x27;) // 在student字符串中t元素所在的下标</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">// substring</span></span><br><span class="line"><span class="string">[)   // 前闭后开</span></span><br><span class="line"><span class="string">student.substring(1) // 从索引为1的字符截取到最后</span></span><br><span class="line"><span class="string">student.substring(1,3) // 总索引为1的字符截取到索引为3（不包括3）的字符</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&quot;tom&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;jack&quot;</span>,<span class="number">90</span>]]);</span><br><span class="line"><span class="keyword">var</span> score = map.<span class="title function_">get</span>(<span class="string">&quot;tom&quot;</span>); <span class="comment">// 通过key获得value</span></span><br><span class="line"></span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&quot;mcola&quot;</span>,<span class="number">123</span>); <span class="comment">// 添加元素</span></span><br><span class="line">map.<span class="title function_">delete</span>(<span class="string">&quot;tom&quot;</span>); <span class="comment">// 删除</span></span><br></pre></td></tr></table></figure><h3 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无序不重复集合</span></span><br><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>]); <span class="comment">// 输出为1，2，3 ，自动去重</span></span><br><span class="line">set.<span class="title function_">add</span>(<span class="number">4</span>); <span class="comment">// 添加元素</span></span><br><span class="line">set.<span class="title function_">delete</span>(<span class="number">3</span>); <span class="comment">// 删除元素</span></span><br><span class="line">set.<span class="title function_">has</span>(<span class="number">1</span>); <span class="comment">// 判断是否包含</span></span><br></pre></td></tr></table></figure><h3 id="iterator遍历Map和Set"><a href="#iterator遍历Map和Set" class="headerlink" title="iterator遍历Map和Set"></a>iterator遍历Map和Set</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>([[<span class="string">&quot;tom&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;jack&quot;</span>,<span class="number">90</span>]]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> x <span class="keyword">of</span> map)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> x <span class="keyword">of</span> set)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 与其他语言一样</span></span><br><span class="line"><span class="keyword">if</span>(num&gt;<span class="number">12</span>)&#123;</span><br><span class="line">xxx</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">xxx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 与其他语言一样</span></span><br><span class="line"><span class="keyword">while</span>(n&lt;m)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n);</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(n);</span><br><span class="line">n++;</span><br><span class="line">&#125;<span class="keyword">while</span>(n&lt;m)</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组循环"><a href="#数组循环" class="headerlink" title="数组循环"></a>数组循环</h3><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1.2</span>,<span class="string">&quot;mcola&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> array)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">array</span>(i); <span class="comment">// 输出数组中的每一个元素,i为索引</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意区分</span></span><br><span class="line">------------------------</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">of</span> array)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// 输出数组中的每一个元素,i为元素</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// forEach循环</span></span><br><span class="line">array.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">cosole.<span class="title function_">log</span>(value);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote><p>定义方式一(建议）</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">abs</span>(<span class="params">x</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> -x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>定义方式二</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="keyword">function</span>(<span class="params">x</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> -x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>调用函数</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">abs</span>(<span class="number">10</span>);</span><br></pre></td></tr></table></figure><blockquote><p>参数问题</p></blockquote><p>可以传递任意个参数，也可以不传递参数</p><p>‘arguments’ 代表传进来的所有参数是一个数组，可以拿出来所有传入的参数</p><blockquote><p>Rest</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a,b,...rest</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(rest); <span class="comment">// 将剩下未定义的参数全部放到一个数组中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>规避参数异常</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> x !== number)&#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="string">&#x27;Not a number&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><blockquote><p>在函数体内用var定义的变量在函数体外是不能用的（闭包）</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">x = x + <span class="number">1</span>; <span class="comment">// Uncaught ReferenceError: x is not defined</span></span><br><span class="line"></span><br><span class="line">---------------------------------------</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>内部函数可以访问外部函数的变量，反之不行</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123; </span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> y = x + <span class="number">1</span>;<span class="comment">// 2  </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> z = x + y; <span class="comment">// 报错</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>调用函数从内向外，内部屏蔽外部函数的同名变量</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123; </span><br><span class="line">        <span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> x = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// a</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 1</span></span><br><span class="line">        <span class="title function_">f2</span>();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>JS自动提升了变量的声明，但是不会提升赋值</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123; </span><br><span class="line">      <span class="keyword">var</span> x = <span class="string">&#x27;1&#x27;</span>+y;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(x); <span class="comment">// 1undefined</span></span><br><span class="line">      <span class="keyword">var</span> y = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">// 这两个函数是等价的</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> y;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="string">&#x27;1&#x27;</span>+y;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">    y = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>规范：把所有变量的定义全部放在最前面</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123; </span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">1</span>,</span><br><span class="line">    y = x + <span class="number">1</span>,</span><br><span class="line">    z,m;</span><br><span class="line">    <span class="comment">// ...  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>全局变量：定义在函数外部</p></blockquote><p>默认所有全局变量会自动绑定在window对象下，为了减少重名的冲突，把自己的代码全部放入自己定义的唯一空间名中（jQuery）</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">x</span>); <span class="comment">// 等价</span></span><br><span class="line"><span class="title function_">alert</span>(x);</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>(x); <span class="comment">// alert也是绑定在window对象下的</span></span><br></pre></td></tr></table></figure><blockquote><p>局部作用域：let</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i+<span class="number">1</span>); <span class="comment">// 能够在循环体外面使用i</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用let可以解决这个问题，建议使用let定义局部作用域</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>) &#123; </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i+<span class="number">1</span>); <span class="comment">// 能够在循环体外面使用i</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>常量 const</p></blockquote><p>在ES6之前，约定全部大写的变量为常量，但是任然可以改变</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span>;</span><br><span class="line"><span class="variable constant_">PI</span> = <span class="number">213</span>;</span><br></pre></td></tr></table></figure><p>在ES6引入const，这样强制规定不能改变变量</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><blockquote><p>定义方式</p></blockquote><p>把函数放在对象里</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: mcola,</span><br><span class="line">    <span class="attr">birth</span>: <span class="number">2003</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>();</span><br><span class="line">            <span class="keyword">return</span> now-<span class="variable language_">this</span>.<span class="property">birth</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用属性</span></span><br><span class="line">person.<span class="property">name</span></span><br><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">person.<span class="title function_">age</span>()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本篇文章为作者在网上自学JS时的笔记，看的狂神的b站视频&lt;br&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV1JJ41177di?vd_source=60d132d325064c67a7980dc5ab2ba</summary>
      
    
    
    
    <category term="前端学习" scheme="https://machenye.github.io/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建博客</title>
    <link href="https://machenye.github.io/2024/08/20/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://machenye.github.io/2024/08/20/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2024-08-20T07:26:34.000Z</published>
    <updated>2024-08-23T02:48:24.166Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>想重新熟悉一下怎么搭建一个博客，于是就有了这个新的博客</p></blockquote><p>这次使用的是hexo来搭建博客，之前使用过</p><ul><li>hugo 这个太过久远了都忘记怎么上传了</li><li>notion-next+vercel服务器 这个必须要挂梯子才能使用，而且速度特别慢，编辑文章非常不方便</li><li>想过租一个服务器但是价格有点贵，而且感觉用不太到，可能后面需要把自己做的一些vue+springboot项目部署的时候才可能会用到</li></ul><p>使用hexo并且部署到github的服务器上，可以本地预览，也可以上传到服务器上，后面买了个域名但是还在备案，等后面域名好了，就可以不用挂梯子也能访问这个博客了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;想重新熟悉一下怎么搭建一个博客，于是就有了这个新的博客&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这次使用的是hexo来搭建博客，之前使用过&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hugo 这个太过久远了都忘记怎么上传了&lt;/li&gt;
&lt;li&gt;notion-nex</summary>
      
    
    
    
    <category term="网站搭建" scheme="https://machenye.github.io/categories/%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
</feed>
